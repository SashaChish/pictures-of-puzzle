{"version":3,"sources":["serviceWorker.js","componens/StickySlider/Slide.js","componens/StickySlider/StickiSliders.js","componens/Puzzle/ItemShuffle.js","componens/Loader/Loader.js","componens/Puzzle/PuzzleShuffle.js","componens/Puzzle/BoardCell.js","componens/Puzzle/PuzzleBoard.js","data/shuffle.js","data/puzzleOptions.js","App.js","utils/api.js","index.js"],"names":["Boolean","window","location","hostname","match","Slide","this","props","url","id","title","changeImg","className","onClick","bind","style","backgroundImage","React","Component","StickySlider","images","params","slidesPerView","slidesPerGroup","loop","loopFillGroupWithBlank","spaceBetween","map","img","key","tags","split","ItemShuffle","options","styles","width","height","backgroundSize","backgroundPosition","position","Loader","PuzzleShuffle","values","targetURL","option","BoardCell","border","PuzzleBoard","shuffle","arr","j","temp","i","length","Math","floor","random","App","searchPhoto","fetch","then","response","json","hits","hit","webformatURL","setState","changeImgOnClick","state","find","setTimeout","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.544df801.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\r\n\r\nclass Slide extends React.Component {\r\n  render() {\r\n    const { url, id, title, changeImg } = this.props\r\n\r\n    if (url) {\r\n      return (\r\n        <div className=\"container-sticky-slider\">\r\n          <div\r\n            className=\"content-sticky-slider\"\r\n            onClick={changeImg.bind(this, id)}\r\n            style={{ backgroundImage: `url(${url})` }}\r\n          />\r\n          <div className=\"footer-sticky-slider\">{title}</div>\r\n        </div>\r\n      )\r\n    } else return\r\n  }\r\n}\r\n\r\nexport default Slide\r\n","import React from 'react'\r\n\r\nimport Swiper from 'react-id-swiper'\r\nimport 'swiper/swiper.scss'\r\n// import 'swiper/swiper-bundle.css'\r\nimport Slide from './Slide'\r\n\r\nclass StickySlider extends React.Component {\r\n  render() {\r\n    const { images, changeImg } = this.props\r\n\r\n    const params = {\r\n      slidesPerView: 4,\r\n      slidesPerGroup: 2,\r\n      loop: true,\r\n      loopFillGroupWithBlank: true,\r\n      spaceBetween: 40,\r\n      // pagination: {\r\n      //   el: '.swiper-pagination',\r\n      //   type: 'fraction',\r\n      // },\r\n      // navigation: {\r\n      //   nextEl: '.swiper-button-next',\r\n      //   prevEl: '.swiper-button-prev',\r\n      // },\r\n      // observer: true,\r\n      // observeParents: true,\r\n    }\r\n\r\n    return (\r\n      <div className=\"margin-top\">\r\n        <Swiper {...params}>\r\n          {images.map(img => (\r\n            <div key={img.id}>\r\n              <Slide\r\n                url={img.url}\r\n                title={img.tags.split(',')[0]}\r\n                id={img.id}\r\n                changeImg={changeImg}\r\n              ></Slide>\r\n            </div>\r\n          ))}\r\n        </Swiper>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default StickySlider\r\n","import React from 'react'\r\n\r\nclass ItemShuffle extends React.Component {\r\n  render() {\r\n    const { url, options } = this.props\r\n\r\n    const styles = {\r\n      width: options.width,\r\n      height: options.height,\r\n      backgroundSize: '670px 470px',\r\n      backgroundImage: `url(${url})`,\r\n      backgroundPosition: options.position,\r\n    }\r\n\r\n    return <div style={styles} />\r\n  }\r\n}\r\n\r\nexport default ItemShuffle\r\n","import React from 'react'\r\n\r\nfunction Loader() {\r\n  return (\r\n    <div className=\"lds-ripple\">\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport ItemShuffle from './ItemShuffle'\r\nimport Loader from '../Loader/Loader'\r\n\r\nclass PuzzleShuffle extends React.Component {\r\n  render() {\r\n    const { values } = this.props\r\n    return (\r\n      <div className=\"shuffled-puzzles\">\r\n        {values.targetURL ? (\r\n          values.options.map(option => (\r\n            <ItemShuffle\r\n              key={option.id}\r\n              url={values.targetURL}\r\n              options={option}\r\n            />\r\n          ))\r\n        ) : (\r\n          <div className=\"loader\">\r\n            <h2>Click on the picture to complete the puzzle</h2>\r\n            <Loader />\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PuzzleShuffle\r\n","import React from 'react'\r\n\r\nclass BoardCell extends React.Component {\r\n  render() {\r\n    const { options } = this.props\r\n\r\n    const styles = {\r\n      width: options.width,\r\n      height: options.height,\r\n      backgroundSize: '670px 470px',\r\n      border: '1px solid black',\r\n    }\r\n\r\n    return <div style={styles} />\r\n  }\r\n}\r\n\r\nexport default BoardCell\r\n","import React from 'react'\r\nimport BoardCell from './BoardCell'\r\n\r\nclass PuzzleBoard extends React.Component {\r\n  render() {\r\n    const { values } = this.props\r\n\r\n    return (\r\n      <div className=\"board-for-images\">\r\n        {values.options.map(option => (\r\n          <BoardCell key={option.id} url={values.targetURL} options={option} />\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PuzzleBoard\r\n","export default function shuffle(arr) {\r\n  let j, temp\r\n\r\n  for (let i = arr.length - 1; i > 0; i--) {\r\n    j = Math.floor(Math.random() * (i + 1))\r\n    temp = arr[j]\r\n    arr[j] = arr[i]\r\n    arr[i] = temp\r\n  }\r\n  \r\n  return arr\r\n}\r\n\r\n","export const options = [\r\n  {\r\n    id: 1,\r\n    width: '223.3px',\r\n    height: '156.6px',\r\n    backgroundSize: '670px 470px',\r\n    position: 'top left',\r\n  },\r\n  {\r\n    id: 2,\r\n    width: '223.3px',\r\n    height: '156.6px',\r\n    backgroundSize: '670px 470px',\r\n    position: 'top',\r\n  },\r\n  {\r\n    id: 3,\r\n    width: '223.3px',\r\n    height: '156.6px',\r\n    backgroundSize: '670px 470px',\r\n    position: 'right top',\r\n  },\r\n  {\r\n    id: 4,\r\n    width: '223.3px',\r\n    height: '156.6px',\r\n    backgroundSize: '670px 470px',\r\n    position: 'left',\r\n  },\r\n  {\r\n    id: 5,\r\n    width: '223.3px',\r\n    height: '156.6px',\r\n    backgroundSize: '670px 470px',\r\n    position: 'center',\r\n  },\r\n  {\r\n    id: 6,\r\n    width: '223.3px',\r\n    height: '156.6px',\r\n    backgroundSize: '670px 470px',\r\n    position: 'right',\r\n  },\r\n  {\r\n    id: 7,\r\n    width: '223.3px',\r\n    height: '156.6px',\r\n    backgroundSize: '670px 470px',\r\n    position: 'bottom left',\r\n  },\r\n  {\r\n    id: 8,\r\n    width: '223.3px',\r\n    height: '156.6px',\r\n    backgroundSize: '670px 470px',\r\n    position: 'bottom',\r\n  },\r\n  {\r\n    id: 9,\r\n    width: '223.3px',\r\n    height: '156.6px',\r\n    backgroundSize: '670px 470px',\r\n    position: 'bottom right',\r\n  },\r\n]\r\n","import React from 'react'\r\n\r\nimport StickySlider from './componens/StickySlider/StickiSliders'\r\nimport PuzzleShuffle from './componens/Puzzle/PuzzleShuffle'\r\nimport PuzzleBoard from './componens/Puzzle/PuzzleBoard'\r\nimport shuffle from './data/shuffle'\r\nimport { options } from './data/puzzleOptions'\r\nimport { key } from './utils/api'\r\nimport Loader from './componens/Loader/Loader'\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super()\r\n\r\n    this.state = {\r\n      options: shuffle(options),\r\n      images: [],\r\n      targetURL: '',\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    setTimeout(this.searchPhoto, 2000)\r\n  }\r\n\r\n  searchPhoto = () => {\r\n    return fetch(`https://pixabay.com/api/?key=${key}&image_type=photo`)\r\n      .then(response => response.json())\r\n      .then(json => json.hits)\r\n      .then(hits => {\r\n        const images = hits.map(hit => ({\r\n          id: hit.id,\r\n          tags: hit.tags,\r\n          url: hit.webformatURL,\r\n        }))\r\n        this.setState({ images })\r\n      })\r\n  }\r\n\r\n  changeImgOnClick = id => {\r\n    const targetURL = this.state.images.find(img => img.id === id).url\r\n    const options = shuffle(this.state.options)\r\n    this.setState({ targetURL, options })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.images.length) {\r\n      return (\r\n        <>\r\n          <StickySlider\r\n            images={this.state.images}\r\n            changeImg={this.changeImgOnClick}\r\n          />\r\n          <hr className=\"hr-horizontal-gradient\" />\r\n          <div className=\"container-boards\">\r\n            <PuzzleShuffle values={this.state} />\r\n            <PuzzleBoard values={this.state} />\r\n          </div>\r\n        </>\r\n      )\r\n    } else\r\n      return (\r\n        <div className=\"preloader\">\r\n          <Loader />\r\n        </div>\r\n      )\r\n  }\r\n}\r\n\r\nexport default App\r\n","export const key = '17518139-b73def73b5f5b784fdb869618'\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport './App.scss'\n\nimport * as serviceWorker from './serviceWorker'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\nserviceWorker.unregister()\n"],"sourceRoot":""}