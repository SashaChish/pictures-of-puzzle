{"version":3,"sources":["serviceWorker.js","componens/StickySlider/Slide.js","componens/StickySlider/StickiSliders.js","componens/Puzzle/BoardShuffle.js","componens/Loader/Loader.js","componens/Puzzle/BoardForPlay.js","componens/Buttons/Buttons.js","componens/Puzzle/PuzzleBoards.js","data/shuffle.js","data/puzzleOptions.js","App.js","utils/api.js","index.js"],"names":["Boolean","window","location","hostname","match","Slide","this","props","url","id","title","changeImg","className","onClick","bind","style","backgroundImage","React","Component","StickySlider","images","params","slidesPerView","slidesPerGroup","spaceBetween","navigation","nextEl","prevEl","map","img","key","tags","split","BoardShuffle","position","options","item","takeCell","styles","backgroundPosition","Loader","BoardForPlay","fokus","e","preventDefault","target","classList","add","outFokus","remove","dropCell","switchCell","border","onMouseDown","onMouseUp","onMouseOver","onMouseOut","Buttons","clearCellPuzzle","type","PuzzleBoards","values","takeCellImg","dropCellImg","takeCellGameBoard","switchCellGameBoard","shuffledSize","width","shuffleOptions","length","height","targetURL","option","shuffle","arr","j","temp","newArray","i","Math","floor","random","App","searchPhotoRequest","fetch","then","response","json","hits","hit","webformatURL","setState","changeImgOnClick","state","find","active","stylesCell","filter","switchId","switchOptions","setTimeout","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"kPAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,uDCWSC,G,6KAzBH,IAAD,EAC+BC,KAAKC,MAAnCC,EADD,EACCA,IAAKC,EADN,EACMA,GAAIC,EADV,EACUA,MAAOC,EADjB,EACiBA,UAExB,OAAIH,EAEA,yBAAKI,UAAU,2BACb,yBACEA,UAAU,wBACVC,QAASF,EAAUG,KAAK,KAAML,GAC9BM,MAAO,CAAEC,gBAAgB,OAAD,OAASR,EAAT,QAE1B,yBAAKI,UAAU,wBAAwBF,SAGtC,M,GAfSO,IAAMC,YCoDXC,E,uKA7CH,IAAD,EACuBb,KAAKC,MAA3Ba,EADD,EACCA,OAAQT,EADT,EACSA,UACVU,EAAS,CACbC,cAAe,EACfC,eAAgB,EAChBC,aAAc,GAQdC,WAAY,CACVC,OAAQ,sBACRC,OAAQ,wBAMZ,OACE,yBAAKf,UAAU,cACb,kBAAC,IAAWS,EACTD,EAAOQ,KAAI,SAAAC,GAAG,OACb,yBAAKC,IAAKD,EAAIpB,IACZ,kBAAC,EAAD,CACED,IAAKqB,EAAIrB,IACTE,MAAOmB,EAAIE,KAAKC,MAAM,KAAK,GAC3BvB,GAAIoB,EAAIpB,GACRE,UAAWA,c,GA/BAM,IAAMC,WCuBlBe,E,uKA5BH,IAAD,EAQH3B,KAAKC,MANPC,EAFK,EAELA,IACAC,EAHK,EAGLA,GAEUyB,EALL,EAILC,QACEC,KAAQF,SAEVG,EAPK,EAOLA,SAGIC,EAAS,CACbtB,gBAAiBR,EACjB+B,mBAAoBL,GAGtB,OACE,yBAAKtB,UAAU,OAAOG,MAAOuB,EAAQzB,QAASwB,EAASvB,KAAK,KAAML,S,GAjB7CQ,IAAMC,WCQlBsB,MATf,WACE,OACE,yBAAK5B,UAAU,cACb,8BACA,gCCiCS6B,E,4MAnCbC,MAAQ,SAAAC,GACNA,EAAEC,iBACFD,EAAEE,OAAOC,UAAUC,IAAI,e,EAGzBC,SAAW,SAAAL,GAAC,OAAIA,EAAEE,OAAOC,UAAUG,OAAO,e,uDAEhC,IAAD,EACwC3C,KAAKC,MAA5CE,EADD,EACCA,GAAIyC,EADL,EACKA,SAAUb,EADf,EACeA,SAAUc,EADzB,EACyBA,WAMhC,OACE,yBACEpC,MANW,CACbqC,OAAQ,8BAMNxC,UAAU,OACVC,QAASqC,EACTG,YAAahB,EAASvB,KAAK,KAAML,GACjC6C,UAAWH,EAAWrC,KAAK,KAAML,GACjC8C,YAAajD,KAAKoC,MAClBc,WAAYlD,KAAK0C,e,GAvBE/B,IAAMC,WCkBlBuC,E,uKAjBH,IACAC,EAAoBpD,KAAKC,MAAzBmD,gBAER,OACE,yBAAK9C,UAAU,cACb,4BAAQ+C,KAAK,SAAS/C,UAAU,SAASC,QAAS6C,GAAlD,qB,GANczC,IAAMC,WCwEb0C,E,uKAlEH,IAAD,EAQHtD,KAAKC,MANPsD,EAFK,EAELA,OACAC,EAHK,EAGLA,YACAC,EAJK,EAILA,YACAC,EALK,EAKLA,kBACAC,EANK,EAMLA,oBACAP,EAPK,EAOLA,gBAGIQ,EAAe,CACnBC,MAAON,EAAOO,eAAeC,QAAU,EAAI,QAAU,QACrDC,OAAQT,EAAOO,eAAeC,QAAU,EAAI,QAAU,SAGxD,OACE,yBAAKzD,UAAU,oBACb,yBAAKA,UAAU,mBAAmBG,MAAOmD,GACtCL,EAAOU,UACNV,EAAOO,eAAexC,KAAI,SAAA4C,GAAM,OAC9B,kBAAC,EAAD,CACE1C,IAAK0C,EAAO/D,GACZA,GAAI+D,EAAO/D,GACXD,IAAKqD,EAAOU,UACZlC,SAAUyB,EACV3B,QAASqC,OAIb,yBAAK5D,UAAU,UACb,2EACA,kBAAC,EAAD,QAILiD,EAAOU,WAAa,kBAAC,EAAD,CAASb,gBAAiBA,IAC9CG,EAAOU,WACN,6BACE,0CACA,yBAAK3D,UAAU,kBACZiD,EAAO1B,QAAQP,KAAI,SAAA4C,GAAM,OACxB,kBAAC,EAAD,CACE1C,IAAK0C,EAAO/D,GACZA,GAAI+D,EAAO/D,GACXyC,SAAUa,EACV1B,SAAU2B,EACVb,WAAYc,c,GA/CHhD,IAAMC,W,QCRlB,SAASuD,EAAQC,GAI9B,IAHA,IAAIC,EAAGC,EACDC,EAAQ,YAAOH,GAEZI,EAAID,EAASR,OAAS,EAAGS,EAAI,EAAGA,IAEvCF,EAAOC,EADPF,EAAII,KAAKC,MAAMD,KAAKE,UAAYH,EAAI,KAEpCD,EAASF,GAAKE,EAASC,GACvBD,EAASC,GAAKF,EAGhB,OAAOC,ECXF,IAAM1C,EAAU,CACrB,CACE1B,GAAI,EACJ2B,KAAM,CACJF,SAAU,aAGd,CACEzB,GAAI,EACJ2B,KAAM,CACJF,SAAU,QAGd,CACEzB,GAAI,EACJ2B,KAAM,CACJF,SAAU,cAGd,CACEzB,GAAI,EACJ2B,KAAM,CACJF,SAAU,SAGd,CACEzB,GAAI,EACJ2B,KAAM,CACJF,SAAU,WAGd,CACEzB,GAAI,EACJ2B,KAAM,CACJF,SAAU,UAGd,CACEzB,GAAI,EACJ2B,KAAM,CACJF,SAAU,gBAGd,CACEzB,GAAI,EACJ2B,KAAM,CACJF,SAAU,WAGd,CACEzB,GAAI,EACJ2B,KAAM,CACJF,SAAU,kBC4FDgD,E,kDAtIb,aAAe,IAAD,8BACZ,gBAiBFC,mBAAqB,WACnB,OAAOC,MAAM,gCAAD,OC7BG,qCD6BH,sBACTC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GAAI,OAAIA,EAAKC,QAClBH,MAAK,SAAAG,GACJ,IAAMpE,EAASoE,EAAK5D,KAAI,SAAA6D,GAAG,MAAK,CAC9BhF,GAAIgF,EAAIhF,GACRsB,KAAM0D,EAAI1D,KACVvB,IAAKiF,EAAIC,iBAGX,EAAKC,SAAS,CAAEvE,eA7BR,EAiCdwE,iBAAmB,SAAAnF,GACjB,IAAI8D,EAAY,EAAKsB,MAAMzE,OAAO0E,MAAK,SAAAjE,GAAG,OAAIA,EAAIpB,KAAOA,KAAID,IACvDqD,EAAS,CACbO,eAAgBK,EAAQtC,GACxBoC,UAAU,OAAD,OAASA,EAAT,MAGX,EAAKoB,SAAS9B,IAxCF,EA2CdC,YAAc,SAACrD,EAAIkC,GAAO,IAAD,EACyBA,EAAEE,OAAO9B,MAAjDwB,EADe,EACfA,mBAAoBvB,EADL,EACKA,gBADL,EAEY,EAAK6E,MAAhCE,EAFe,EAEfA,OAAQ3B,EAFO,EAEPA,eAEhB,IAAK2B,GAAU/E,EAAiB,CAC9B,IAMM6C,EAAS,CAAEmC,WANE,CACjB9D,SAAUK,EACV/B,IAAKQ,GAIsBoD,eADbA,EAAe6B,QAAO,SAAA7D,GAAI,OAAIA,EAAK3B,KAAOA,KACJsF,QAAQ,GAE9D,EAAKJ,SAAS9B,KAxDJ,EA4DdE,YAAc,SAAApB,GACZ,IAAM5B,EAAQ4B,EAAEE,OAAO9B,MADN,EAKb,EAAK8E,MAFPE,EAHe,EAGfA,OAHe,IAIfC,WAAc9D,EAJC,EAIDA,SAAU1B,EAJT,EAISA,IAGtBuF,IAAWhF,EAAMC,kBACnBD,EAAMwB,mBAAqBL,EAC3BnB,EAAMC,gBAAkBR,EAExB,EAAKmF,SAAS,CAAEI,QAAQ,MAvEd,EA2Ed/B,kBAAoB,SAACvD,EAAIkC,GACvBA,EAAEC,iBAEF,EAAK+C,SAAS,CAAEO,SAAUzF,KA9Ed,EAiFdwD,oBAAsB,SAAAxD,GAAO,IAAD,EACI,EAAKoF,MAA3B1D,EADkB,EAClBA,QAAS+D,EADS,EACTA,SAEjB,GAAIzF,IAAOyF,EAAU,CACnB,IAAMC,EAAgBhE,EAAQP,KAAI,SAAA4C,GAChC,OAAIA,EAAO/D,KAAOA,EAAW,2BAAK+D,GAAZ,IAAoB/D,GAAIyF,IACrC1B,EAAO/D,KAAOyF,EAAiB,2BAAK1B,GAAZ,IAAoB/D,OACzC+D,KAGd,EAAKmB,SAAS,CAAExD,QAASgE,MA3Ff,EA+FdzC,gBAAkB,WAChB0C,YAAW,WAMT,EAAKT,SALa,CAChBI,QAAQ,EACRC,WAAY,GACZzB,UAAW,OAGZ,MApGH,EAAKsB,MAAQ,CACX1D,UACAiC,eAAgB,GAChBhD,OAAQ,GACRmD,UAAW,GACX2B,SAAU,EACVH,QAAQ,EACRC,WAAY,IAVF,E,gEAeZ1F,KAAK6E,uB,+BA4FL,OAAI7E,KAAKuF,MAAMzE,OAAOiD,OAElB,oCACE,kBAAC,EAAD,CACEjD,OAAQd,KAAKuF,MAAMzE,OACnBT,UAAWL,KAAKsF,mBAElB,wBAAIhF,UAAU,2BACd,kBAAC,EAAD,CACEiD,OAAQvD,KAAKuF,MACb/B,YAAaxD,KAAKwD,YAClBC,YAAazD,KAAKyD,YAClBL,gBAAiBpD,KAAKoD,gBACtBM,kBAAmB1D,KAAK0D,kBACxBC,oBAAqB3D,KAAK2D,uBAM9B,yBAAKrD,UAAU,aACb,kBAAC,EAAD,W,GAjIQK,IAAMC,WEDxBmF,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SZ2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtB,MAAK,SAAAuB,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.b352fab3.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Slide extends React.Component {\r\n  render() {\r\n    const { url, id, title, changeImg } = this.props\r\n\r\n    if (url) {\r\n      return (\r\n        <div className=\"container-sticky-slider\">\r\n          <div\r\n            className=\"content-sticky-slider\"\r\n            onClick={changeImg.bind(null, id)}\r\n            style={{ backgroundImage: `url(${url})` }}\r\n          />\r\n          <div className=\"footer-sticky-slider\">{title}</div>\r\n        </div>\r\n      )\r\n    } else return\r\n  }\r\n}\r\n\r\nSlide.propTypes = {\r\n  url: PropTypes.string.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  changeImg: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Slide\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport Swiper from 'react-id-swiper'\r\nimport 'swiper/swiper.scss'\r\n// import 'swiper/swiper-bundle.min.css'\r\n\r\nimport Slide from './Slide'\r\n\r\nclass StickySlider extends React.Component {\r\n  render() {\r\n    const { images, changeImg } = this.props\r\n    const params = {\r\n      slidesPerView: 4,\r\n      slidesPerGroup: 2,\r\n      spaceBetween: 40,\r\n\r\n      // loop: true,\r\n      // loopFillGroupWithBlank: true,\r\n      // pagination: {\r\n      //   el: '.swiper-pagination',\r\n      //   type: 'fraction',\r\n      // },\r\n      navigation: {\r\n        nextEl: '.swiper-button-next',\r\n        prevEl: '.swiper-button-prev',\r\n      },\r\n      // observer: true,\r\n      // observeParents: true,\r\n    }\r\n\r\n    return (\r\n      <div className=\"margin-top\">\r\n        <Swiper {...params}>\r\n          {images.map(img => (\r\n            <div key={img.id}>\r\n              <Slide\r\n                url={img.url}\r\n                title={img.tags.split(',')[0]}\r\n                id={img.id}\r\n                changeImg={changeImg}\r\n              ></Slide>\r\n            </div>\r\n          ))}\r\n        </Swiper>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nStickySlider.propTypes = {\r\n  images: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  changeImg: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default StickySlider\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass BoardShuffle extends React.Component {\r\n  render() {\r\n    const {\r\n      url,\r\n      id,\r\n      options: {\r\n        item: { position },\r\n      },\r\n      takeCell,\r\n    } = this.props\r\n\r\n    const styles = {\r\n      backgroundImage: url,\r\n      backgroundPosition: position,\r\n    }\r\n\r\n    return (\r\n      <div className=\"cell\" style={styles} onClick={takeCell.bind(null, id)} />\r\n    )\r\n  }\r\n}\r\n\r\nBoardShuffle.propTypes = {\r\n  url: PropTypes.string.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n  position: PropTypes.string,\r\n  takeCell: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default BoardShuffle\r\n","import React from 'react'\r\n\r\nfunction Loader() {\r\n  return (\r\n    <div className=\"lds-ripple\">\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass BoardForPlay extends React.Component {\r\n  fokus = e => {\r\n    e.preventDefault()\r\n    e.target.classList.add('cell-fokus')\r\n  }\r\n\r\n  outFokus = e => e.target.classList.remove('cell-fokus')\r\n\r\n  render() {\r\n    const { id, dropCell, takeCell, switchCell } = this.props\r\n\r\n    const styles = {\r\n      border: '1px solid rgb(116, 64, 64)',\r\n    }\r\n\r\n    return (\r\n      <div\r\n        style={styles}\r\n        className=\"cell\"\r\n        onClick={dropCell}\r\n        onMouseDown={takeCell.bind(null, id)}\r\n        onMouseUp={switchCell.bind(null, id)}\r\n        onMouseOver={this.fokus}\r\n        onMouseOut={this.outFokus}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nBoardForPlay.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  dropCell: PropTypes.func.isRequired,\r\n  takeCell: PropTypes.func.isRequired,\r\n  switchCell: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default BoardForPlay\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Buttons extends React.Component {\r\n  render() {\r\n    const { clearCellPuzzle } = this.props\r\n\r\n    return (\r\n      <div className=\"button-box\">\r\n        <button type=\"button\" className=\"button\" onClick={clearCellPuzzle}>\r\n          Clear Boards\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nButtons.propTypes = {\r\n  clearCellPuzzle: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Buttons\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport BoardShuffle from './BoardShuffle'\r\nimport Loader from '../Loader/Loader'\r\nimport BoardForPlay from './BoardForPlay'\r\nimport Buttons from '../Buttons/Buttons'\r\n\r\nclass PuzzleBoards extends React.Component {\r\n  render() {\r\n    const {\r\n      values,\r\n      takeCellImg,\r\n      dropCellImg,\r\n      takeCellGameBoard,\r\n      switchCellGameBoard,\r\n      clearCellPuzzle,\r\n    } = this.props\r\n\r\n    const shuffledSize = {\r\n      width: values.shuffleOptions.length <= 6 ? '600px' : '700px',\r\n      height: values.shuffleOptions.length <= 4 ? '200px' : '470px',\r\n    }\r\n\r\n    return (\r\n      <div className=\"container-boards\">\r\n        <div className=\"shuffled-puzzles\" style={shuffledSize}>\r\n          {values.targetURL ? (\r\n            values.shuffleOptions.map(option => (\r\n              <BoardShuffle\r\n                key={option.id}\r\n                id={option.id}\r\n                url={values.targetURL}\r\n                takeCell={takeCellImg}\r\n                options={option}\r\n              />\r\n            ))\r\n          ) : (\r\n            <div className=\"loader\">\r\n              <h2>Click on the picture to complete the puzzle</h2>\r\n              <Loader />\r\n            </div>\r\n          )}\r\n        </div>\r\n        {values.targetURL && <Buttons clearCellPuzzle={clearCellPuzzle} />}\r\n        {values.targetURL && (\r\n          <div>\r\n            <h2>Game board</h2>\r\n            <div className=\"board-for-play\">\r\n              {values.options.map(option => (\r\n                <BoardForPlay\r\n                  key={option.id}\r\n                  id={option.id}\r\n                  dropCell={dropCellImg}\r\n                  takeCell={takeCellGameBoard}\r\n                  switchCell={switchCellGameBoard}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nPuzzleBoards.propTypes = {\r\n  values: PropTypes.object.isRequired,\r\n  takeCellImg: PropTypes.func.isRequired,\r\n  dropCellImg: PropTypes.func.isRequired,\r\n  takeCellGameBoard: PropTypes.func.isRequired,\r\n  switchCellGameBoard: PropTypes.func.isRequired,\r\n  clearCellPuzzle: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default PuzzleBoards\r\n","export default function shuffle(arr) {\r\n  let j, temp\r\n  const newArray = [...arr]\r\n\r\n  for (let i = newArray.length - 1; i > 0; i--) {\r\n    j = Math.floor(Math.random() * (i + 1))\r\n    temp = newArray[j]\r\n    newArray[j] = newArray[i]\r\n    newArray[i] = temp\r\n  }\r\n\r\n  return newArray\r\n}\r\n","export const options = [\r\n  {\r\n    id: 1,\r\n    item: {\r\n      position: 'top left',\r\n    },\r\n  },\r\n  {\r\n    id: 2,\r\n    item: {\r\n      position: 'top',\r\n    },\r\n  },\r\n  {\r\n    id: 3,\r\n    item: {\r\n      position: 'right top',\r\n    },\r\n  },\r\n  {\r\n    id: 4,\r\n    item: {\r\n      position: 'left',\r\n    },\r\n  },\r\n  {\r\n    id: 5,\r\n    item: {\r\n      position: 'center',\r\n    },\r\n  },\r\n  {\r\n    id: 6,\r\n    item: {\r\n      position: 'right',\r\n    },\r\n  },\r\n  {\r\n    id: 7,\r\n    item: {\r\n      position: 'bottom left',\r\n    },\r\n  },\r\n  {\r\n    id: 8,\r\n    item: {\r\n      position: 'bottom',\r\n    },\r\n  },\r\n  {\r\n    id: 9,\r\n    item: {\r\n      position: 'bottom right',\r\n    },\r\n  },\r\n]\r\n","import React from 'react'\r\n\r\nimport StickySlider from './componens/StickySlider/StickiSliders'\r\nimport PuzzleBoards from './componens/Puzzle/PuzzleBoards'\r\nimport shuffle from './data/shuffle'\r\nimport { options } from './data/puzzleOptions'\r\nimport { key } from './utils/api'\r\nimport Loader from './componens/Loader/Loader'\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super()\r\n\r\n    this.state = {\r\n      options,\r\n      shuffleOptions: [],\r\n      images: [],\r\n      targetURL: '',\r\n      switchId: 1,\r\n      active: false,\r\n      stylesCell: {},\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.searchPhotoRequest()\r\n  }\r\n\r\n  searchPhotoRequest = () => {\r\n    return fetch(`https://pixabay.com/api/?key=${key}&image_type=photo`)\r\n      .then(response => response.json())\r\n      .then(json => json.hits)\r\n      .then(hits => {\r\n        const images = hits.map(hit => ({\r\n          id: hit.id,\r\n          tags: hit.tags,\r\n          url: hit.webformatURL,\r\n        }))\r\n\r\n        this.setState({ images })\r\n      })\r\n  }\r\n\r\n  changeImgOnClick = id => {\r\n    let targetURL = this.state.images.find(img => img.id === id).url\r\n    const values = {\r\n      shuffleOptions: shuffle(options),\r\n      targetURL: `url(${targetURL})`,\r\n    }\r\n\r\n    this.setState(values)\r\n  }\r\n\r\n  takeCellImg = (id, e) => {\r\n    const { backgroundPosition, backgroundImage } = e.target.style\r\n    const { active, shuffleOptions } = this.state\r\n\r\n    if (!active && backgroundImage) {\r\n      const stylesCell = {\r\n        position: backgroundPosition,\r\n        url: backgroundImage,\r\n      }\r\n\r\n      const options = shuffleOptions.filter(item => item.id !== id)\r\n      const values = { stylesCell, shuffleOptions: options, active: true }\r\n\r\n      this.setState(values)\r\n    }\r\n  }\r\n\r\n  dropCellImg = e => {\r\n    const style = e.target.style\r\n    const {\r\n      active,\r\n      stylesCell: { position, url },\r\n    } = this.state\r\n\r\n    if (active && !style.backgroundImage) {\r\n      style.backgroundPosition = position\r\n      style.backgroundImage = url\r\n\r\n      this.setState({ active: false })\r\n    }\r\n  }\r\n\r\n  takeCellGameBoard = (id, e) => {\r\n    e.preventDefault()\r\n\r\n    this.setState({ switchId: id })\r\n  }\r\n\r\n  switchCellGameBoard = id => {\r\n    const { options, switchId } = this.state\r\n\r\n    if (id !== switchId) {\r\n      const switchOptions = options.map(option => {\r\n        if (option.id === id) return { ...option, id: switchId }\r\n        else if (option.id === switchId) return { ...option, id }\r\n        else return option\r\n      })\r\n\r\n      this.setState({ options: switchOptions })\r\n    }\r\n  }\r\n\r\n  clearCellPuzzle = () => {\r\n    setTimeout(() => {\r\n      const clearning = {\r\n        active: false,\r\n        stylesCell: {},\r\n        targetURL: '',\r\n      }\r\n      this.setState(clearning)\r\n    }, 200)\r\n  }\r\n\r\n  render() {\r\n    if (this.state.images.length) {\r\n      return (\r\n        <>\r\n          <StickySlider\r\n            images={this.state.images}\r\n            changeImg={this.changeImgOnClick}\r\n          />\r\n          <hr className=\"hr-horizontal-gradient\" />\r\n          <PuzzleBoards\r\n            values={this.state}\r\n            takeCellImg={this.takeCellImg}\r\n            dropCellImg={this.dropCellImg}\r\n            clearCellPuzzle={this.clearCellPuzzle}\r\n            takeCellGameBoard={this.takeCellGameBoard}\r\n            switchCellGameBoard={this.switchCellGameBoard}\r\n          />\r\n        </>\r\n      )\r\n    } else\r\n      return (\r\n        <div className=\"preloader\">\r\n          <Loader />\r\n        </div>\r\n      )\r\n  }\r\n}\r\n\r\nexport default App\r\n","export const key = '17518139-b73def73b5f5b784fdb869618'\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport './App.scss'\n\nimport * as serviceWorker from './serviceWorker'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\nserviceWorker.unregister()\n"],"sourceRoot":""}